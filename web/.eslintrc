{
  "root": true,
  "env": {
    "browser": true,
    "jest/globals": true
  },
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "plugins": [
    "react",
    "jest",
    "no-storage"
  ],
  "extends": "airbnb",
  "parser": "@babel/eslint-parser",
  "settings": {
    "react": {
      "version": "detect"
    },
    "import/resolver": {
      "webpack": {}
    }
  },
  "rules": {
    // The following rules are cases where our base rules
    // differed from AirBnB Style guide. Keeping for now.
    "no-unused-vars": [
      "error",
      {
        "vars": "all",
        "args": "none"
      }
    ],
    "camelcase": [
      "error",
      {
        "allow": [
          "^UNSAFE_"
        ],
        "properties": "never"
      }
    ],
    "no-useless-call": "error",
    "no-extra-parens": "error",
    "space-before-function-paren": "off",
    "import/extensions": "off",
    "no-multiple-empty-lines": "off",
    "import/no-extraneous-dependencies": [
      "error",
      {
        "devDependencies": [
          "**/*test.js",
          "**/*config.js",
          "**/*conf.js"
        ]
      }
    ],
    "no-storage/no-browser-storage": "error"
  },
  "overrides": [
    {
      "files": [
        "**/*.js"
      ],
      "rules": {
        /* BEGIN Airbnb overrides

          Rules below are overriding the Airbnb style guide rules in order to get code
          to pass without having to fix hundreds of existing errors by hand.

          For rules set to "off": consider setting to "warn" to identify non-compliance in new code
          For rules set to "warn": consider removing to throw errors on existing and future code
        */

        /* Error Counts compiled 8/22/2023 */

        // Base rule overrides
        "no-nested-ternary": "off",    // 164 errors across 40 files
        "no-shadow": "warn",           // 110 errors across 40 files
        "max-len": "off",              // 315 errors across 109 files
        "consistent-return": "off",    // 95 errors across 58 files
        "no-underscore-dangle": "off", // 40 errors across 7 files
        "no-param-reassign": [         // 198 errors across 46 files
          "warn",
          {
            "props": false
          }
        ],
        // Import rules overrides
        "import/no-cycle": "warn",
        // Accesibility rules overrides
        "jsx-a11y/no-noninteractive-tabindex": "off",             // 2 errors across 2 files
        "jsx-a11y/no-noninteractive-element-interactions": "off", // 5 errors across 5 files
        "jsx-a11y/anchor-has-content": "off",                     // 1 error across 1 files
        "jsx-a11y/control-has-associated-label": "off",           // 1 error across 1 files
        "jsx-a11y/anchor-is-valid": "off",                        // 24 errors across 13 files
        "jsx-a11y/label-has-associated-control": "off",           // 5 errors across 4 files
        "jsx-a11y/alt-text": "off",                               // 15 errors across 10 files
        "jsx-a11y/mouse-events-have-key-events": "off",           // 7 errors across 4 files
        "jsx-a11y/no-static-element-interactions": "off",         // 71 errors across 39 files
        "jsx-a11y/click-events-have-key-events": "off",           // 70 errors across 39 files
        // React rules overrides
        "react/jsx-props-no-spreading": "warn",                   // 6 errors across 2 files
        "react/jsx-filename-extension": "off",                    // 206 errors across 206 files
        "react/jsx-no-bind": "warn",                              // 9 errors across 5 files
        "react/sort-comp": [
          "error",
          {
            "order": [
              "static-methods",
              "lifecycle",
              "everything-else",
              "render"
            ],
            "groups": {
              "lifecycle": [
                "displayName",
                "propTypes",
                "contextTypes",
                "childContextTypes",
                "mixins",
                "statics",
                "defaultProps",
                "constructor",
                "getDefaultProps",
                "state",
                "getInitialState",
                "getChildContext",
                "getDerivedStateFromProps",
                "componentWillMount",
                "UNSAFE_componentWillMount",
                "componentDidMount",
                "componentWillReceiveProps",
                "UNSAFE_componentWillReceiveProps",
                "shouldComponentUpdate",
                "componentWillUpdate",
                "UNSAFE_componentWillUpdate",
                "getSnapshotBeforeUpdate",
                "componentDidUpdate",
                "componentDidCatch",
                "componentWillUnmount"
              ]
            }
          }
        ],
        "react/forbid-prop-types": "off",                  // 411 errors across 139 files
        "react/require-default-props": "off",              // 1644 errors across > 80 files
        "class-methods-use-this": "warn",                  // 15 errors across 13 files
        "react/no-unused-class-component-methods": "warn", // 8 errors across 7 files
        "react/no-unknown-property": "warn",               // 2 errors across 2 files
        "react/jsx-no-useless-fragment": "warn",           // 3 errors across 3 files
        "react/no-unstable-nested-components": "warn",     // 1 error across 1 file
        "react/prop-types": "warn",                        // 58 errors across 22 files
        "react/no-unused-prop-types": "warn",              // 9 errors across 9 files
        "default-param-last": "warn",                      // 42 errors across 34 files
        "prefer-regex-literals": "warn",                   // 3 errors across 1 file
        "no-promise-executor-return": "warn"               // 1 error across 1 file
      }
    }
  ]
}
