{
  "name": "worldview",
  "version": "4.1.0",
  "description": "Interactive interface for browsing full-resolution, global satellite imagery",
  "keywords": [
    "NASA",
    "Earthdata",
    "GIS",
    "NRT",
    "satellite imagery",
    "wildfire management",
    "air quality",
    "flood monitoring",
    "science",
    "earth science",
    "GDAL"
  ],
  "homepage": "https://worldview.earthdata.nasa.gov/",
  "bugs": {
    "url": "https://github.com/nasa-gibs/worldview/issues",
    "email": "support@earthdata.nasa.gov"
  },
  "license": "NASA-1.3",
  "repository": "nasa-gibs/worldview",
  "engines": {
    "node": ">= 18"
  },
  "scripts": {
    "analyze": "cross-env ANALYZE_MODE=true NODE_ENV=production webpack",
    "build": "run-s clean getcapabilities build:config build:dev",
    "build:ci": "run-s getcapabilities build:config build:prod",
    "build:options": "bash -c 'tasks/buildOptions.sh'",
    "build:config": "run-s build:options && node ./tasks/util/config.js",
    "build:dev": "cross-env NODE_ENV=development webpack",
    "build:prod": "cross-env NODE_ENV=production webpack",
    "clean": "node ./tasks/util/clean.js",
    "dist": "run-s clean getcapabilities build:config build:prod && node ./tasks/util/dist.js",
    "dist:dev": "run-s clean getcapabilities build:config build:dev && node ./tasks/util/dist.js",
    "distclean": "npm run clean && node ./tasks/util/distclean.js",
    "docker:ci": "npm run docker:restart && docker exec -it worldview /bin/bash /build/e2e/docker-ci.sh ; npm run docker:stop",
    "docker:image": "docker build -t worldview .",
    "docker:reimage": "docker rmi -f worldview && docker build --no-cache -t worldview .",
    "docker:restart": "run-s docker:stop docker:start",
    "docker:shell": "docker exec -it worldview /bin/bash ; true",
    "docker:shellwin": "winpty docker exec -it worldview //bin/bash",
    "docker:start": "docker run --rm --name worldview --mount type=bind,source=\"$(pwd)\",target=/build --mount type=volume,target=/build/node_modules -p 3128:3000 -d worldview",
    "docker:stop": "docker stop -t 1 worldview ; true",
    "e2e": "npm run docker:restart && docker exec -it worldview /bin/bash /build/e2e/docker-ci.sh ; npm run docker:stop",
    "getcapabilities": "bash -c 'FETCH_GC=1 npm run build:options'",
    "generatePreviews": "node ./tasks/build-options/fetchPreviewSnapshots.py",
    "linkcheck": "node ./tasks/link-check",
    "lint": "run-s lint:js lint:scss",
    "lint:scss": "npx stylelint ./web/scss/**/*.scss",
    "lint:js": "npx eslint . --quiet",
    "preinstall": "node tasks/util/checkNodeVersion.js",
    "postinstall": "patch-package && husky install",
    "start": "node ./tasks/util/start.js",
    "t-debug": "npx playwright test --debug",
    "test": "run-script-os",
    "test:coverage": "run-script-os",
    "test:coverage:default": "run-s test:unit:coverage test:unit:tz:coverage lint",
    "test:coverage:win32": "run-s test:unit:coverage lint",
    "test:win32": "run-s test:unit lint",
    "test:default": "run-s test:unit test:unit:tz lint",
    "test:unit": "npx jest",
    "test:unit:coverage": "npx jest --coverage",
    "test:unit:tz": "TZ=Australia/Sydney npx jest",
    "test:unit:tz:coverage": "TZ=Australia/Sydney npx jest --coverage",
    "updateconfig": "run-s getcapabilities build:config",
    "watch": "cross-env NODE_ENV=development webpack serve",
    "watch:debug:logger": "cross-env DEBUG=logger NODE_ENV=development webpack serve",
    "watch:debug:devtools": "cross-env DEBUG=devtools NODE_ENV=development webpack serve",
    "upload": "node tasks/util/upload.js"
  },
  "devDependencies": {
    "@babel/core": "^7.20.12",
    "@babel/eslint-parser": "^7.19.1",
    "@babel/plugin-proposal-class-properties": "^7.18.6",
    "@babel/preset-env": "^7.20.2",
    "@babel/preset-react": "^7.18.6",
    "@playwright/test": "^1.30.0",
    "@pmmmwh/react-refresh-webpack-plugin": "^0.5.10",
    "@webpack-cli/serve": "^2.0.1",
    "ajv": "^8.11.2",
    "autoprefixer": "^10.4.13",
    "axios": "^1.2.2",
    "babel-loader": "^9.1.2",
    "cheerio": "^1.0.0-rc.12",
    "clean-webpack-plugin": "^4.0.0",
    "cross-env": "^7.0.2",
    "css-loader": "^6.7.3",
    "css-minimizer-webpack-plugin": "^4.2.2",
    "css-url-relative-plugin": "^1.1.0",
    "cssnano": "^5.1.15",
    "eslint": "^8.31.0",
    "eslint-config-airbnb": "^19.0.4",
    "eslint-config-standard": "^17.0.0",
    "eslint-import-resolver-webpack": "^0.13.2",
    "eslint-plugin-import": "^2.27.4",
    "eslint-plugin-jest": "^27.2.1",
    "eslint-plugin-jsx-a11y": "^6.7.1",
    "eslint-plugin-n": "^15.6.1",
    "eslint-plugin-no-storage": "^1.0.2",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-promise": "^6.1.1",
    "eslint-plugin-react": "^7.32.0",
    "eslint-plugin-standard": "^5.0.0",
    "express": "^4.18.2",
    "fetch-mock": "^9.1.1",
    "glob": "^9.2.1",
    "husky": "^8.0.3",
    "jest": "^29.3.1",
    "jest-canvas-mock": "^2.2.0",
    "jest-environment-jsdom": "^29.3.1",
    "mini-css-extract-plugin": "^2.7.2",
    "node-dir": "^0.1.17",
    "node-fetch": "^3.3.0",
    "node-ssh": "^13.0.0",
    "npm-run-all": "^4.1.5",
    "patch-package": "^6.5.1",
    "postcss": "^8.4.21",
    "postcss-loader": "^7.0.2",
    "react-refresh": "^0.14.0",
    "react-test-renderer": "^16.14.0",
    "redux-mock-store": "^1.5.3",
    "run-script-os": "^1.1.5",
    "sass": "^1.57.1",
    "sass-loader": "^13.2.0",
    "shelljs": "^0.8.5",
    "showdown": "^2.1.0",
    "stylelint": "^14.16.1",
    "stylelint-config-standard-scss": "^6.1.0",
    "stylelint-high-performance-animation": "^1.7.0",
    "tar": "^6.1.13",
    "terser-webpack-plugin": "^5.3.6",
    "webpack": "^5.75.0",
    "webpack-bundle-analyzer": "^4.7.0",
    "webpack-cli": "^5.0.1",
    "webpack-dev-middleware": "^6.0.1",
    "webpack-dev-server": "^4.11.1",
    "xml-js": "^1.6.11",
    "xml2js": "^0.4.23",
    "yargs": "^17.6.2"
  },
  "dependencies": {
    "@elastic/react-search-ui": "^1.5.1",
    "@elastic/react-search-ui-views": "^1.5.1",
    "@fortawesome/fontawesome-svg-core": "^1.2.27",
    "@fortawesome/free-brands-svg-icons": "^5.12.1",
    "@fortawesome/free-regular-svg-icons": "^5.12.1",
    "@fortawesome/free-solid-svg-icons": "^5.13.0",
    "@fortawesome/react-fontawesome": "^0.1.9",
    "@khanisak/temperature-converter": "^1.2.0",
    "@redux-devtools/extension": "^3.2.2",
    "bluebird": "3.7.2",
    "bootstrap": "4.4.1",
    "cachai": "^1.0.2",
    "compression": "^1.7.4",
    "coordinate-parser": "^1.0.4",
    "copy-to-clipboard": "^3.3.1",
    "element-resize-detector": "^1.2.4",
    "elm-pep": "^1.0.6",
    "file-saver": "^2.0.2",
    "geographiclib": "^1.50.0",
    "history": "^4.7.2",
    "imagesloaded": "^5.0.0",
    "immutability-helper": "^3.0.1",
    "jsdom-worker": "^0.3.0",
    "lodash": "^4.17.21",
    "masonry-layout": "^4.2.2",
    "moment": "^2.29.4",
    "moment-locales-webpack-plugin": "^1.2.0",
    "node-dir": "^0.1.17",
    "ol": "7.2.2",
    "ol-mapbox-style": "9.4.0",
    "p-queue": "^7.3.0",
    "proj4": "2.6.1",
    "prop-types": "^15.7.2",
    "rc-slider": "9.2.2",
    "react": "^16.14.0",
    "react-autocomplete": "^1.8.1",
    "react-beautiful-dnd": "^13.1.1",
    "react-contextmenu": "^2.14.0",
    "react-device-detect": "^2.2.2",
    "react-dom": "^16.12.0",
    "react-draggable": "^4.1.0",
    "react-image-crop": "^9.1.1",
    "react-infinite-scroller": "^1.2.4",
    "react-joyride": "^2.3.0",
    "react-mobile-datepicker": "^4.0.1",
    "react-portal": "^4.2.1",
    "react-redux": "^8.0.5",
    "react-resizable": "^1.9.0",
    "react-swipe-to-delete-component": "^0.5.4",
    "react-visibility-sensor": "^5.1.1",
    "reactstrap": "8.1.x",
    "redux": "^4.0.4",
    "redux-location-state": "^2.6.0",
    "redux-logger": "^3.0.6",
    "redux-thunk": "^2.4.2",
    "regenerator-runtime": "^0.13.3",
    "reselect": "^4.0.0",
    "rgbcolor": "^1.0.1",
    "simplebar": "^6.2.1",
    "simplebar-react": "^2.1.0",
    "stackblur": "^1.0.0",
    "supercluster": "7.0.0",
    "url-template": "^3.1.0",
    "what-input": "^5.2.7"
  },
  "browserslist": [
    "last 2 versions",
    "not IE 11",
    "not dead",
    "> 1%"
  ],
  "prettier": {
    "singleQuote": true
  }
}
